{"title":"关于滚动吸顶的方法","date":"2019-04-24T01:12:29.000Z","link":"post/滚动吸顶的方法","tags":["js","前端"],"updated":"2019-05-03T11:16:45.000Z","content":"<h2 id=\"第一种使用CSS中的position-sticky-实现\">第一种使用CSS中的<code>position:sticky</code>    实现<a href=\"post/滚动吸顶的方法#第一种使用CSS中的position-sticky-实现\"></a></h2><p>使用条件：</p>\n<ol>\n<li>父元素不能 <code>overflow:hidden</code> 或者 <code>overflow:auto</code> 属性</li>\n<li>必须指定 <code>top、bottom、left、right</code> 4 个值之一，否则只会处于相对定位</li>\n<li>父元素的高度不能低于 <code>sticky</code> 元素的高度</li>\n<li><code>sticky</code> 元素仅在其父元素内生效<h3 id=\"例如：\"><a href=\"#例如：\" class=\"headerlink\" title=\"例如：\"></a>例如：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.nav &#123;</span><br><span class=\"line\">     position: -webkit-sticky; </span><br><span class=\"line\">     position: sticky;</span><br><span class=\"line\">     top: 0; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"兼容性\">兼容性<a href=\"post/滚动吸顶的方法#兼容性\"></a></h3><p>并不是很好因为这个 API 还只是<strong>实验性的属性</strong>。不过这个 API 在 IOS 系统的兼容性还是比较好的。</p>\n<h2 id=\"使用Jquery-的-offset（）-top-实现\">使用Jquery 的 offset（）.top 实现<a href=\"post/滚动吸顶的方法#使用Jquery-的-offset（）-top-实现\"></a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.addEventListener(&apos;scroll&apos;,self.handleScrollone);</span><br><span class=\"line\">....</span><br><span class=\"line\">handleScrollone: function( ) &#123;</span><br><span class=\"line\">    let self = this;</span><br><span class=\"line\">    let scrrollTop = $(&apos;html&apos;).scrollTop( ); //获取滚动高度</span><br><span class=\"line\">    let offsetTop = $(&apos;.title_box&apos;).offset( ).top;    //盒子高度</span><br><span class=\"line\">    self.titleFixed = scrollTop &gt; Top;    //判断滚动高度是否大于盒子高度</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用原生JavaScript 实现<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.addEventListener(&apos;scroll&apos;,Navflexd);</span><br><span class=\"line\">Navflexd:function( )&#123;</span><br><span class=\"line\">    let scrollTop = document.documentElement.scrollTop;</span><br><span class=\"line\">    //需要定位的距离 </span><br><span class=\"line\">    let    navigatorBarTop = 需要定位的距离；</span><br><span class=\"line\">    //判断滚动距离大于定位距离就定位</span><br><span class=\"line\">    //获取当前浏览器是否在定位状态如果和上一步结构不一样就执行下面</span><br><span class=\"line\">    if（设定好的定位值 ！== 导航需要定位距离）&#123;</span><br><span class=\"line\">        //更新设定好的值  </span><br><span class=\"line\">        X = Y;</span><br><span class=\"line\">        //获取需要定位的元素</span><br><span class=\"line\">        //判断是否需要定位if（导航需要定位距离）classname上添加上active</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"第二种\">第二种<a href=\"post/滚动吸顶的方法#第二种\"></a></h3><ul>\n<li>说明：vm.$refs 一个对象，持有已注册过 ref 的所有子组件（或HTML元素）</li>\n<li>使用：在 HTML元素 中，添加ref属性，然后在JS中通过vm.$refs.属性来获取</li>\n<li>注意：如果获取的是一个子组件，那么通过ref就能获取到子组件中的data和methods<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.addEventListener(&apos;scroll&apos;, self.handleScrollTwo); </span><br><span class=\"line\">handleScrollTwo: function() &#123; </span><br><span class=\"line\">    let self = this;</span><br><span class=\"line\">    let scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;</span><br><span class=\"line\">    let offsetTop = self.getOffset(self.$refs.prode_tab_fixed);</span><br><span class=\"line\">    self.titleFixed = scrollTop &gt; offsetTop;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>### </p>\n<p>使用 <code>obj.getBoundingClientRect().top</code> 实现 <a href=\"[https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect](https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\">MDN</a>)</p>\n<p><strong>定义：</strong></p>\n<p>这个 <code>API</code> 可以告诉你页面中某个元素<strong>相对浏览器视窗</strong>上下左右的距离。</p>\n<p><strong>使用：</strong><br>tab 吸顶可以使用 <code>obj.getBoundingClientRect().top</code> 代替 <code>scrollTop - offsetTop</code>,代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// html</span><br><span class=\"line\">&lt;div class=&quot;pride_tab_fixed&quot; ref=&quot;pride_tab_fixed&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;pride_tab&quot; :class=&quot;titleFixed == true ? &apos;isFixed&apos; :&apos;&apos;&quot;&gt;</span><br><span class=\"line\">        // some code</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">// vue</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">    data()&#123;</span><br><span class=\"line\">      return&#123;</span><br><span class=\"line\">        titleFixed: false</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    activated()&#123;</span><br><span class=\"line\">      this.titleFixed = false;</span><br><span class=\"line\">      window.addEventListener(&apos;scroll&apos;, this.handleScroll);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      //滚动监听，头部固定</span><br><span class=\"line\">      handleScroll: function () &#123;</span><br><span class=\"line\">        let offsetTop = this.$refs.pride_tab_fixed.getBoundingClientRect().top;</span><br><span class=\"line\">        this.titleFixed = offsetTop &lt; 0;</span><br><span class=\"line\">        // some code</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n<h4 id=\"offsetTop-和-getBoundingClientRect-区别\">offsetTop 和 getBoundingClientRect() 区别<a href=\"post/滚动吸顶的方法#offsetTop-和-getBoundingClientRect-区别\"></a></h4><p><strong>1. getBoundingClientRect():</strong></p>\n<p>该<code>**Element.getBoundingClientRect()**</code>方法返回元素的大小及其相对于视口的位置。。</p>\n<p>该函数返回一个 <code>object</code> 对象，有6个属性： <code>top, right, buttom, left, width, height。</code> (在 IE 中，默认坐标从(2,2)开始计算，只返回 <code>top,lef,right,bottom</code> 四个值)</p>\n<p><strong>2. offsetTop:</strong></p>\n<p>用于获得当前元素到定位父级（ element.offsetParent ）顶部的距离（偏移值）。</p>\n","prev":{"title":"forEach,map,filter循环操作整理","link":"post/关于Js循环操作"},"next":{"title":"初来乍到HEXO","link":"post/闪亮登场"},"plink":"http://yoursite.com/post/滚动吸顶的方法/","toc":[{"title":"第一种使用CSS中的<code>position:sticky</code>    实现","id":"第一种使用CSS中的position-sticky-实现","index":"1","children":[{"title":"","id":"例如：","index":"1.1"},{"title":"兼容性","id":"兼容性","index":"1.2"}]},{"title":"使用Jquery 的 offset（）.top 实现","id":"使用Jquery-的-offset（）-top-实现","index":"2","children":[{"title":"第二种","id":"第二种","index":"2.1","children":[{"title":"offsetTop 和 getBoundingClientRect() 区别","id":"offsetTop-和-getBoundingClientRect-区别","index":"2.1.1"}]}]}]}