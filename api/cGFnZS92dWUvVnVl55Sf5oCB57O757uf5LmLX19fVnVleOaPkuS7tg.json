{"title":"通过简单计数器学习Vuex","date":"2019-05-03T11:16:57.000Z","updated":"2019-05-03T11:16:57.000Z","content":"<h1 id=\"通过简单计数器学习Vuex\">通过简单计数器学习Vuex<a href=\"vue/Vue生态系统之___Vuex插件#通过简单计数器学习Vuex\"></a></h1><p>GIThub vuex实例 🐱 简单计数器案例<br><a href=\"https://github.com/ragnar-document/Vuex_demo\" target=\"_blank\" rel=\"noopener\">https://github.com/ragnar-document/Vuex_demo</a></p>\n<h4 id=\"Vuex是啥❓\">Vuex是啥❓<a href=\"vue/Vue生态系统之___Vuex插件#Vuex是啥❓\"></a></h4><p>Vuex 是一个专为 Vue.js 应用程序开发的<strong>状态管理模式</strong>。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。简单来说就像一个超级商店里面有许多你需要的的东西。每一个 Vuex 应用的核心就是 store（仓库）。“store”基本上就是一个容器</p>\n<p>Vuex使用单一状态🌲</p>\n<h4 id=\"重点词汇-🏁\">重点词汇 🏁<a href=\"vue/Vue生态系统之___Vuex插件#重点词汇-🏁\"></a></h4><ul>\n<li><p><strong>state</strong>（状态/steit/）驱动应用的数据源；每个应用将仅仅包含一个 store 实例</p>\n</li>\n<li><p><strong>mutation</strong>  改变 你不能直接改变 store 中的状态。改变 store 中的状态的唯一途径就是显式地<strong>提交 (commit)</strong> </p>\n</li>\n<li><p><strong>getters</strong>  获取</p>\n</li>\n<li><p><strong>commit</strong> 指派修改 例：store.commit(‘item’) 通过指派任务触发mutation中的事件</p>\n</li>\n<li><p><strong>modules</strong> 模块</p>\n</li>\n<li><p><strong>methods</strong> 方法</p>\n</li>\n<li><p><strong>view</strong>，以声明方式将 <strong>state</strong> 映射到视图；</p>\n</li>\n<li><p><strong>actions</strong>，响应在 <strong>view</strong> 上的用户输入导致的状态变化。</p>\n</li>\n<li><p><strong>computed</strong>  计算属性</p>\n</li>\n<li><p><strong>dispatch</strong> 分派</p>\n</li>\n<li><p><strong>mapstate</strong> 辅助函数 为了减少声明帮我们生成计算属性</p>\n<p><img src=\"https://vuex.vuejs.org/vuex.png\" alt></p>\n</li>\n</ul>\n<p>Vuex 是专门为 Vue.js 设计的状态管理库，以利用 Vue.js 的细粒度数据响应机制来进行高效的状态更新。</p>\n<p>什么情况使用？？不用想肯定是麻烦大型的单页应用才使用吧要不然要你何用😂直接使用store模式就👌了</p>\n<h3 id=\"起步\">起步<a href=\"vue/Vue生态系统之___Vuex插件#起步\"></a></h3><p>有木有熟悉的味道？？？ 我们已经见过很多次了import将下载好的vuex引入并use使用它</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//新建store文件夹📁存放//在store.js中引入</span><br><span class=\"line\">import Vue from &apos;vue&apos;;</span><br><span class=\"line\">import Vuex from &apos;vuex&apos;;</span><br><span class=\"line\">import Index from &apos;./index&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Vuex);</span><br></pre></td></tr></table></figure>\n<p>main.js中引入以下文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from &apos;vue&apos;;</span><br><span class=\"line\">import App from &apos;./App.vue&apos;;</span><br><span class=\"line\">import router from &apos;./router&apos;;</span><br><span class=\"line\">import store from &apos;./store/store&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">new Vue(&#123;</span><br><span class=\"line\">  router,</span><br><span class=\"line\">  store,</span><br><span class=\"line\">  render: h =&gt; h(App),</span><br><span class=\"line\">&#125;).$mount(&apos;#app&apos;);</span><br></pre></td></tr></table></figure>\n<p>首先我们需要知道我们需要在页面上使用字符模版<code></code>把内容渲染出去</p>\n<h3 id=\"创建store\">创建<code>store</code><a href=\"vue/Vue生态系统之___Vuex插件#创建store\"></a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const store = new Vuex.Store(&#123;</span><br><span class=\"line\">\tstate:&#123;</span><br><span class=\"line\">\t\tcount:0</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tmutations:&#123;</span><br><span class=\"line\">\t\tincrement(state)&#123;</span><br><span class=\"line\">\t\t\tstate.count ++</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tdecrement(state)&#123;</span><br><span class=\"line\">      state.count --</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>好的我们创建好这个以后就可以开始使用了</p>\n<p>为了能看见它能➕能➖我们是否还需要两个button来控制一下呢？</p>\n<p>当然我们需要所以我们在组件helloworld🀄️添加上两个按键一个是increment另一个是decrement</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;increment&quot;&gt;+&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;decrement&quot;&gt;-&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<p>完成了吗？不我们还差最后一步工作就是在组件中引用这两个方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export default &#123;</span><br><span class=\"line\">  increment()&#123;</span><br><span class=\"line\">      //可以不加也能调用</span><br><span class=\"line\">      //this.$store.commit(&apos;increment&apos;)</span><br><span class=\"line\">      //this.increment</span><br><span class=\"line\">      // this.myIncrement</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  decrement()&#123;</span><br><span class=\"line\">      //this.$store.commit(&apos;decrement&apos;)</span><br><span class=\"line\">      //this.decrement</span><br><span class=\"line\">      // this.myDecrement</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面四种方法都可以做到控制加减变化我们可以根据情况来具体使用</p>\n<h2 id=\"接着我们介绍一下Action\">接着我们介绍一下Action<a href=\"vue/Vue生态系统之___Vuex插件#接着我们介绍一下Action\"></a></h2><ul>\n<li>Action 提交的是 mutation，而不是直接变更状态。</li>\n<li>Action 可以包含任意异步操作。</li>\n</ul>\n<p>我们注册一个</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">   myIncrease(context)&#123;</span><br><span class=\"line\">     context.commit(&apos;increment&apos;)</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   myDecrement(context)&#123;</span><br><span class=\"line\">     context.commit(&apos;decrement&apos;)</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n<p>我们可以调用context.getters提交  </p>\n<p>我们可以使用action做简单的逻辑操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//helloworl.vue中引入</span><br><span class=\"line\">//创建组件方法分发 action</span><br><span class=\"line\">//传入两种方法</span><br><span class=\"line\">methods:&#123;</span><br><span class=\"line\">  ...mapActions([&apos;myIncrement&apos;,&apos;myDecrement&apos;])</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h4 id=\"在组件中分发action详解\">在组件中分发action详解<a href=\"vue/Vue生态系统之___Vuex插件#在组件中分发action详解\"></a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; mapActions &#125; from &apos;vuex&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  // ...</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    ...mapActions([</span><br><span class=\"line\">      &apos;increment&apos;, // 将 `this.increment()` 映射为 \t\t\t`this.$store.dispatch(&apos;increment&apos;)`</span><br><span class=\"line\"></span><br><span class=\"line\">      // `mapActions` 也支持载荷：</span><br><span class=\"line\">      &apos;incrementBy&apos; // 将 `this.incrementBy(amount)` 映射为 `this.$store.dispatch(&apos;incrementBy&apos;, amount)`</span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    ...mapActions(&#123;</span><br><span class=\"line\">      add: &apos;increment&apos; // 将 `this.add()` 映射为 `this.$store.dispatch(&apos;increment&apos;)`</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>还有一个getters放到后面因为使用比较简洁我们注册一个getters</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//在store中注册</span><br><span class=\"line\">  getters:&#123;</span><br><span class=\"line\">    myCount(state)&#123;</span><br><span class=\"line\">      return `hi ~ $&#123;state.count&#125;`</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">// 在app.vue中注入</span><br><span class=\"line\">  import &#123;mapGetters&#125; from &apos;vuex&apos;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">  computed:&#123;</span><br><span class=\"line\">    ...mapGetters([&apos;myCount&apos;])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Modeule模块\">Modeule模块<a href=\"vue/Vue生态系统之___Vuex插件#Modeule模块\"></a></h3><p>当内容相当多的时候代码会相当臃肿复杂所以我们需要将它插分为模块</p>\n<p>官方实例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const moduleA = &#123;</span><br><span class=\"line\">  state: &#123; ... &#125;,</span><br><span class=\"line\">  mutations: &#123; ... &#125;,</span><br><span class=\"line\">  actions: &#123; ... &#125;,</span><br><span class=\"line\">  getters: &#123; ... &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">const store = new Vuex.Store(&#123;</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">    a</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">store.state.a // -&gt; moduleA 的状态</span><br></pre></td></tr></table></figure>\n<p>单独页面引入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Index from &apos;./index&apos;</span><br><span class=\"line\">Vue.use(Vuex);</span><br><span class=\"line\"></span><br><span class=\"line\">const store = new Vuex.Store(&#123;</span><br><span class=\"line\">  modules:&#123;</span><br><span class=\"line\">    Index</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">export default store</span><br></pre></td></tr></table></figure>\n<p>还有最后<code></code> 的指向问题就是分离模块后指向错所以不能得到正确数据无法渲染所以我们需要为count重新指向</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">computed:&#123;</span><br><span class=\"line\">    ...mapState(&#123;</span><br><span class=\"line\">      count: state =&gt; &#123;</span><br><span class=\"line\">        return state.Index.count</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"更多补充\">更多补充<a href=\"vue/Vue生态系统之___Vuex插件#更多补充\"></a></h3><h4 id=\"mapState\"><a href=\"https://vuex.vuejs.org/zh/guide/state.html#mapstate-%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0\" target=\"_blank\" rel=\"noopener\">mapState</a><a href=\"vue/Vue生态系统之___Vuex插件#mapState\"></a></h4><p>为组件创建计算属性以返回 Vuex store 中的状态。</p>\n<h4 id=\"mapGetters\"><a href=\"https://vuex.vuejs.org/zh/guide/getters.html#mapgetters-%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0\" target=\"_blank\" rel=\"noopener\">mapGetters</a><a href=\"vue/Vue生态系统之___Vuex插件#mapGetters\"></a></h4><p>为组件创建计算属性以返回 getter 的返回值。</p>\n<h4 id=\"mapActions\"><a href=\"https://vuex.vuejs.org/zh/guide/actions.html#%E5%9C%A8%E7%BB%84%E4%BB%B6%E4%B8%AD%E5%88%86%E5%8F%91-action\" target=\"_blank\" rel=\"noopener\">mapActions</a><a href=\"vue/Vue生态系统之___Vuex插件#mapActions\"></a></h4><p>创建组件方法分发 action。</p>\n<h4 id=\"mapMutations\"><a href=\"https://vuex.vuejs.org/zh/guide/mutations.html#%E5%9C%A8%E7%BB%84%E4%BB%B6%E4%B8%AD%E6%8F%90%E4%BA%A4-mutation\" target=\"_blank\" rel=\"noopener\">mapMutations</a><a href=\"vue/Vue生态系统之___Vuex插件#mapMutations\"></a></h4><p>创建组件方法提交 mutation</p>\n","link":"vue/Vue生态系统之___Vuex插件","plink":"http://yoursite.com/vue/Vue生态系统之___Vuex插件/","toc":[{"title":"通过简单计数器学习Vuex","id":"通过简单计数器学习Vuex","index":"1","children":[{"title":"接着我们介绍一下Action","id":"接着我们介绍一下Action","index":"1.1","children":[{"title":"Modeule模块","id":"Modeule模块","index":"1.1.1"},{"title":"更多补充","id":"更多补充","index":"1.1.2"}]}]}]}