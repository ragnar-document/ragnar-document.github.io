{"title":"Vue 实例","date":"2019-05-03T11:17:02.000Z","updated":"2019-05-03T11:17:02.000Z","content":"<h3 id=\"创建VUE实例有点类似构造函数var一个值再new\">创建VUE实例有点类似构造函数var一个值再new<a href=\"vue/Vue实例#创建VUE实例有点类似构造函数var一个值再new\"></a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var vm = new Vue(&#123;</span><br><span class=\"line\">    //content</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"vue应用通过new-Vue-创建\">vue应用通过<code>new Vue</code> 创建<a href=\"vue/Vue实例#vue应用通过new-Vue-创建\"></a></h3><p>﻿<br>根vue实例注意要大写V，一个vue应用是由可选可嵌套的组件构成拿office文档举例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">根实例 </span><br><span class=\"line\">└─ TodoList   例子盒子</span><br><span class=\"line\">    ├─ TodoItem     盒子的小项目</span><br><span class=\"line\">    │ ├─ DeleteTodoButton     小项目中的删除键</span><br><span class=\"line\">    │ └─ EditTodoButton        小项目中的编辑键</span><br><span class=\"line\">    └─ TodoListFooter     盒子的底部</span><br><span class=\"line\">            ├─ ClearTodosButton           清除todos            </span><br><span class=\"line\">            └─ TodoListStatistics            统计todo</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"数据与方法\">数据与方法<a href=\"vue/Vue实例#数据与方法\"></a></h3><p>当一个 Vue 实例被创建时，它将<code>data</code>对象中的所有的属性加入到 Vue 的<strong>响应式系统</strong>中。当这些属性的值发生改变时，视图将会产生“响应”，即匹配更新为新的值。<br>例如：<br><img src=\"images/vue.png\" alt><br>﻿<br>当这些数据改变时，视图会进行重渲染。值得注意的是只有当实例被创建时<code>data</code>中存在的属性才是<strong>响应式</strong>的。也就是说如果你添加一个新的属性，比如：<br><img src=\"images/altervue.png\" alt><br>﻿<br>和单例模式的data一样你知道你后面会使用到一些值所以可以在data中设置好</p>\n<h3 id=\"Object-freeze\"><code>Object.freeze()</code><a href=\"vue/Vue实例#Object-freeze\"></a></h3><p>它可以阻止更新内容让系统无法跟踪<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var obj = &#123; foo: &apos;bar&apos; &#125; </span><br><span class=\"line\">﻿</span><br><span class=\"line\">Object.freeze(obj) </span><br><span class=\"line\">﻿</span><br><span class=\"line\">new Vue(&#123; el: &apos;#app&apos;, data: obj &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>那么使用到{ foo }的标签将不会更新</p>\n<h3 id=\"关于-data带有前缀\">关于$data带有前缀<a href=\"vue/Vue实例#关于-data带有前缀\"></a></h3><p>他们是一些有用的实例属性及方法他们带有$以便与用户自定义属性区分开来 具体参考 <a href=\"[https://cn.vuejs.org/v2/api/#%E5%AE%9E%E4%BE%8B%E5%B1%9E%E6%80%A7](https://cn.vuejs.org/v2/api/#%E5%AE%9E%E4%BE%8B%E5%B1%9E%E6%80%A7\">传送门再此</a>)</p>\n<h2 id=\"生命钩子的理解\">生命钩子的理解<a href=\"vue/Vue实例#生命钩子的理解\"></a></h2><p>以下来CSDN自闰土大叔的讲解</p>\n<blockquote>\n<p>当面试官问：“谈谈你对vue的生命周期的理解”，听到这句话你是不是心里暗自窃喜：这也太容易了吧，不就是beforeCreate、created、beforeMount、mounted、beforeUpdate、updated、beforeDestroy、destroyed 这几个钩子函数么，创建=&gt;挂载=&gt;更新=&gt;销毁，So easy ！！！<br>生命周期图<br><img src=\"images/lifecycle.png\" alt><br>﻿<br>不能随意使用箭头函数因为箭头函数的this指向的是最顶层的而不是实例vm<br>不要在选项属性或回调上使用<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions\" target=\"_blank\" rel=\"noopener\">箭头函数</a>，比如<code>created: () =&gt; console.log(this.a)</code>或<code>vm.$watch(&#39;a&#39;, newValue =&gt; this.myMethod())</code>。因为箭头函数并没有<code>this</code>，<code>this</code>会作为变量一直向上级词法作用域查找，直至找到位置，经常导致<code>Uncaught TypeError: Cannot read property of undefined</code>或<code>Uncaught TypeError: this.myMethod is not a function</code>之类的错误。</p>\n</blockquote>\n<p>﻿</p>\n","link":"vue/Vue实例","plink":"http://yoursite.com/vue/Vue实例/","toc":[{"title":"生命钩子的理解","id":"生命钩子的理解","index":"1"}]}